{"version":3,"sources":["../src/components/Button/Button.tsx","../src/components/Card/Card.tsx"],"names":["React","clsx"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYO,SAAS,OAAO,EAAA,EAMP;AANO,EAAA,IAAA,EAAA,GAAA,EAAA,EACrB;AAAA,IAAA,OAAA,GAAU,SAAA;AAAA,IACV,IAAA,GAAO,QAAA;AAAA,IACP,QAAA;AAAA,IACA;AAAA,GAhBF,GAYuB,EAAA,EAKlB,KAAA,GAAA,SAAA,CALkB,EAAA,EAKlB;AAAA,IAJH,SAAA;AAAA,IACA,MAAA;AAAA,IACA,UAAA;AAAA,IACA;AAAA,GAAA,CAAA;AAGA,EAAA,MAAM,SAAA,GACJ,kJAAA;AAEF,EAAA,MAAM,QAAA,GAA0C;AAAA,IAC9C,OAAA,EACE,2EAAA;AAAA,IACF,SAAA,EACE,2EAAA;AAAA,IACF,OAAA,EACE;AAAA,GACJ;AAEA,EAAA,MAAM,KAAA,GAAoC;AAAA,IACxC,KAAA,EAAO,qBAAA;AAAA,IACP,MAAA,EAAQ,qBAAA;AAAA,IACR,KAAA,EAAO;AAAA,GACT;AAEA,EAAA,uBACEA,uBAAA,CAAA,aAAA;AAAA,IAAC,QAAA;AAAA,IAAA,aAAA,CAAA,cAAA,CAAA,EAAA,EACK,KAAA,CAAA,EADL;AAAA,MAEC,SAAA,EAAWC,sBAAK,SAAA,EAAW,QAAA,CAAS,OAAO,CAAA,EAAG,KAAA,CAAM,IAAI,CAAA,EAAG,SAAS;AAAA,KAAA,CAAA;AAAA,IAEnE;AAAA,GACH;AAEJ;ACnCO,SAAS,IAAA,CAAK;AAAA,EACnB,KAAA;AAAA,EACA,QAAA;AAAA,EACA,OAAA,GAAU;AACZ,CAAA,EAAc;AACZ,EAAA,MAAM,SAAA,GACJ,8DAAA;AAEF,EAAA,MAAM,cAAA,GAA8C;AAAA,IAClD,OAAA,EACE,kHAAA;AAAA,IACF,SAAA,EACE,yEAAA;AAAA,IACF,OAAA,EACE;AAAA,GACJ;AAEA,EAAA,uBACED,uBAAAA,CAAA,aAAA,CAAC,KAAA,EAAA,EAAI,SAAA,EAAW,CAAA,EAAG,SAAS,CAAA,CAAA,EAAI,cAAA,CAAe,OAAO,CAAC,CAAA,CAAA,EAAA,kBACrDA,uBAAAA,CAAA,aAAA,CAAC,IAAA,EAAA,EAAG,SAAA,EAAU,uCAAA,EAAA,EAAyC,KAAM,CAAA,kBAC7DA,uBAAAA,CAAA,aAAA,CAAC,KAAA,EAAA,EAAI,SAAA,EAAU,yBAAA,EAAA,EAA2B,QAAS,CACrD,CAAA;AAEJ","file":"index.js","sourcesContent":["import clsx from \"clsx\";\r\nimport React from \"react\";\r\n\r\ntype ButtonVariant = \"primary\" | \"secondary\" | \"outline\";\r\ntype ButtonSize = \"small\" | \"medium\" | \"large\";\r\n\r\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  variant?: ButtonVariant;\r\n  size?: ButtonSize;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport function Button({\r\n  variant = \"primary\",\r\n  size = \"medium\",\r\n  children,\r\n  className,\r\n  ...props\r\n}: ButtonProps) {\r\n  const baseClass =\r\n    \"inline-flex items-center justify-center rounded-lg font-semibold transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2\";\r\n\r\n  const variants: Record<ButtonVariant, string> = {\r\n    primary:\r\n      \"bg-orange-500 text-white shadow hover:bg-orange-600 focus:ring-orange-500\",\r\n    secondary:\r\n      \"bg-gray-200 text-gray-900 shadow-sm hover:bg-gray-300 focus:ring-gray-400\",\r\n    outline:\r\n      \"border border-orange-400 text-orange-500 bg-transparent hover:bg-orange-50 focus:ring-orange-400\",\r\n  };\r\n\r\n  const sizes: Record<ButtonSize, string> = {\r\n    small: \"px-3 py-1.5 text-sm\",\r\n    medium: \"px-4 py-2 text-base\",\r\n    large: \"px-6 py-3 text-lg\",\r\n  };\r\n\r\n  return (\r\n    <button\r\n      {...props}\r\n      className={clsx(baseClass, variants[variant], sizes[size], className)}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\ntype CardVariant = \"primary\" | \"secondary\" | \"outline\";\r\n\r\ninterface CardProps {\r\n  title: string;\r\n  children: React.ReactNode;\r\n  variant?: CardVariant;\r\n}\r\n\r\nexport function Card({\r\n  title,\r\n  children,\r\n  variant = \"primary\",\r\n}: CardProps) {\r\n  const baseClass =\r\n    \"w-[320px] h-auto rounded-2xl p-6 transition-all duration-300\";\r\n\r\n  const variantClasses: Record<CardVariant, string> = {\r\n    primary:\r\n      \"bg-gradient-to-br from-orange-200 to-orange-100 border border-orange-300 text-gray-900 shadow-md hover:shadow-lg\",\r\n    secondary:\r\n      \"bg-white border border-gray-200 text-gray-800 shadow-sm hover:shadow-md\",\r\n    outline:\r\n      \"bg-transparent border-2 border-orange-400 text-gray-700 hover:bg-orange-50 hover:shadow-sm\",\r\n  };\r\n\r\n  return (\r\n    <div className={`${baseClass} ${variantClasses[variant]}`}>\r\n      <h2 className=\"text-xl font-bold mb-3 tracking-tight\">{title}</h2>\r\n      <div className=\"text-sm leading-relaxed\">{children}</div>\r\n    </div>\r\n  );\r\n}\r\n"]}